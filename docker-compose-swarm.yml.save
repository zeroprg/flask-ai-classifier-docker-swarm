version: '3.5'

services:

  cam:
    image: zeroprg/flask-docker-swarm_cam:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]
    ports:
      - 3020:3020
    environment:
      - PORT=3020
      - FLASK_ENV=production
      - APP_SETTINGS=/home/app/web/config.txt
      - DB_IP_ADDRESS=localhost
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - db
      - web
    networks:
      - app


  web:
    image: zeroprg/flask-docker-swarm_web:latest
    deploy:
      replicas: 4
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
    ports:
      - 4000:4000
    environment:
      - FLASK_ENV=production
      - APP_SETTINGS=/home/app/web/config.txt
      - DB_USER=postgres
      - DB_IP_ADDRESS=localhost
      - DB_PASSWORD=postgres
    depends_on:
      - db
    networks:
      - app
    healthcheck:
      test: curl --fail http://localhost:4000/ping || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    hostname: 'primary'
    image: zeroprg/flask-docker-swarm_db:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

      placement:
        constraints: 
          - node.role == worker
#          - node.labels.type == primary
    volumes:
      - data-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - MAX_CONNECTIONS=10
      - MAX_WAL_SENDERS=5
      - PG_MODE=primary
    networks:
      - app

  db_replica:
    image: zeroprg/flask-docker-swarm_db:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
          - node.labels.type != primary
    volumes:
      - data-volume:/var/lib/postgresql/data
    ports:
      - "5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - MAX_CONNECTIONS=10
      - MAX_WAL_SENDERS=5
      - PG_MODE=replica
      - PG_PRIMARY_HOST=primary
      - PG_PRIMARY_PORT=5432
    depends_on:
      - db
    networks:
      - app


  ui:
    image: zeroprg/flask-ai-classifier-docker-swarm_ui:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == worker]
    ports:
      - 5000:5000
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - cam
    networks:
      - app
 


  nginx:
    image: zeroprg/flask-docker-swarm_nginx:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
    ports:
      - 80:80
    depends_on:
      - cam
    networks:
      - app


  visualizer:
    image: alexellis2/visualizer-arm:latest
    ports:
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - app


networks:
  app:
    driver: overlay

volumes:
  data-volume:
    driver: local


