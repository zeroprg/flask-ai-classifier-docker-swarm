###########
# BUILDER #
###########

# Base Image
FROM python:3.10-slim as builder



# Define the argument with a default value
ARG WEB=False
# Set the environment variable for web
ENV WEB=$WEB

# Install wget
RUN apt-get update && apt-get install -y wget


############################
# install librdkafka       #
############################

# Install required packages for make
RUN apt-get update && \
    apt-get install -y build-essential zlib1g-dev libssl-dev libsasl2-dev pkg-config

# checkout v1.9.2 configure and make and install it

WORKDIR /opt

# Set the necessary environment variables for librdkafka
ENV C_INCLUDE_PATH=/opt/librdkafka/include
ENV LIBRARY_PATH=/opt/librdkafka/lib

# Download librdkafka C library
RUN wget -O librdkafka.tar.gz https://github.com/edenhill/librdkafka/archive/refs/tags/v1.9.2.tar.gz && \
    tar -xzvf librdkafka.tar.gz && \
    cd librdkafka-1.9.2

# Build and install librdkafka C library 
# install cffi for connectivity with C libraries
RUN pip install cffi

# Set the necessary environment variables for make 
ENV C_INCLUDE_PATH=/usr/local/include
ENV LIBRARY_PATH=/usr/local/lib
RUN cd librdkafka-1.9.2 && \
    ./configure --prefix=/opt/librdkafka && \
    make && \
    make install



# Download MobileNetSSD model
RUN wget --show-progress -P ./models/caffemodel/MobileNetSSD https://github.com/nikmart/pi-object-detection/raw/master/MobileNetSSD_deploy.caffemodel


#########
# FINAL #
#########

# Base Image
FROM python:3.10-slim

ENV HOME=/home/app

# Set working directory
WORKDIR $HOME

# Install OpenCV, NumPy, and Pillow
RUN pip install opencv-python-headless numpy pillow


# Copy the application code
COPY . . 
# Install requirements and download mode
RUN pip install -r ./requirements.txt
RUN pip install gunicorn

# Create directory for the app user
RUN mkdir -p $HOME

# Create the app user
#RUN groupadd app && useradd -g app app


# Copy models
COPY --from=builder /opt/models/caffemodel/MobileNetSSD  ./models/caffemodel/MobileNetSSD
# Copy the librdkafka directory 
COPY --from=builder /opt/librdkafka /opt/librdkafka


# Set the necessary environment variables for librdkafka
# Install required packages for make, gcc, and librdkafka development headers
RUN apt-get update && \
    apt-get install -y build-essential gcc zlib1g-dev libssl-dev libsasl2-dev pkg-config \
    librdkafka-dev


# Check important libraries
RUN  python -c "import cv2; print(cv2.__version__)"

# Run the application if WEB is True, run Flask app; else, run video_streams.py
CMD if [ "$WEB" = "True" ]; then \
        gunicorn --env TMPDIR=./ -w 4 -b 0.0.0.0:3020 manage:app; \
    else \
        python video_streams.py; \
    fi