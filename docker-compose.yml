version: '3.5'

services:

#  cam:
#    build:
#      context: ./services/cam
#      dockerfile: Dockerfile 
#    image: zeroprg/flask-docker-swarm_cam:latest
#    ports:
#      - 3020:3020
#    environment:
#      - PORT=3020
#      - CLASSIFIER_SERVER=http://192.168.0.101/classify
#      - FLASK_ENV=production
#      - APP_SETTINGS=/home/app/web/config.txt
#      - DB_IP_ADDRESS=192.168.0.100
#      - DB_USER=postgres
#      - DB_PASSWORD=postgres
#    depends_on:
#      - db
#      - web
#    networks:
#      - app


#  web:
#    build:
#      context: ./services/web
#      dockerfile: Dockerfile
#    image: zeroprg/flask-docker-swarm_web:latest
#    #command: gunicorn --bind 0.0.0.0:4000 manage:app
#    ports:
#      - 4000:4000
#    environment:
#      - FLASK_ENV=production
#      - APP_SETTINGS=/home/app/web/config.txt
#      - DB_USER=postgres
#      - IP_ADDRESS=192.168.0.101
#      - DB_PASSWORD=postgres
#      - SECRET_CODE=myprecious
#    depends_on:
#      - db
#    networks:
#      - app

  db:
    build:
      context: ./services/db
      dockerfile: Dockerfile
    image: zeroprg/flask-docker-swarm_db:latest
    ports:
       - 5432:5432
    volumes:
       - data-volume:/var/lib/postgresql/data
    environment:
       - POSTGRES_USER=postgres
       - POSTGRES_PASSWORD=postgres
       - POSTGRES_DB=streamer
       - PGDATA=/var/lib/postgresql/data
    networks:
       - postgres
    restart: unless-stopped
    networks:
      - app




#  nginx:
#    build:
#      context: ./services/nginx
#      dockerfile: Dockerfile
#    image: zeroprg/flask-docker-swarm_nginx:latest

#    restart: always
#    ports:
#      - 80:80
#    depends_on:
#      - web
#      - cam  
#    networks:
#      - app


networks:
  app:
    driver: bridge

volumes:
  data-volume:
    driver: local
